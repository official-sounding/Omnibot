#varibles to store program names
CC = g++ 
AR = ar

#location of the minibot project and product library
MINIBOT_PATH = ../Minibot
MINIBOT_BUILD = ${MINIBOT_PATH}/build/
MINIBOT_LIB = ${MINIBOT_BUILD}/build/libMinibot.a

#location of the omnibot plugins
PLUGIN_DIR = ./plugins

LIBPATH = -L ../Minibot/build -L ./build/Threads
LIBS = -lOmniThread -lpthread -lMinibot 
INCLUDES = -I ./include -I ./include/Core -I ./include/Threads -I ../Minibot/include -I ./plugins

#source code directories in the Omnibot project
SRC_CORE = ./src/Core
SRC_THREAD = ./src/Threads

#build directorie3s
BUILD = ./build
BUILD_CORE = ./build/Core
BUILD_THREADS = ./build/Threads

#names of products to be produced by this 
EXECUTABLE = ${BUILD}/Omnibot
PLUGINS = plugins
MINIBOT = Minibot
THREAD_LIB = ${BUILD_THREADS}/libOmniThread.a

#These are the objects that the OmniThread library is built from
THREAD_OBJS =${BUILD_THREADS}/OmniThreadPool.o\
	      ${BUILD_THREADS}/pthread_ThreadPool.o\
	      ${BUILD_THREADS}/pthread_PooledThread.o\
	      ${BUILD_THREADS}/pthread_Thread.o

#These are the core objs that the application is built from
CORE_OBJS = ${BUILD_CORE}/omnibot.o\
	    ${BUILD_CORE}/PluginFactory.o\
	    ${BUILD_CORE}/PluginManager.o\
	    ${BUILD_CORE}/LinuxPluginFactory.o\
	    ${BUILD_CORE}/PluginUtils.o\
	    ${BUILD_CORE}/OmniPluginInterface.o\
	    ${BUILD_CORE}/main.o

#################################################################################
#		These are only needed until dynamic loading is implement
#################################################################################
PLUGIN_OBJS = ${PLUGIN_DIR}/hurlbot.o

#################################################################################

#list of the products generated by "all"
PRODUCTS = ${PLUGINS}\
	   ${THREAD_LIB}\
	   ${MINIBOT}\
	   ${EXECUTABLE}

all: ${PRODUCTS}

-include ${BUILD_CORE}*.d

-include ${BUILD_THREADS}*.d

-include ${PLUGIN_DIR}*.d

-include ${MINIBOT_BUILD}*.d

#build the actual executable.
${EXECUTABLE}: ${THREAD_LIB} ${CORE_OBJS} ${PLUGINS} ${MINIBOT}
	@echo "Building: $@"
	${CC} -o"$@" ${LIBPATH} ${LIBS} ${CORE_OBJS} ${PLUGIN_OBJS} ${LIBS}
	@echo "Done building: $@"
	@echo " "

#build the thread library
${THREAD_LIB}: ${THREAD_OBJS}
	@echo "Building: $@"
	${AR} -rv $@ ${THREAD_OBJS}
	@echo "Done building: $@"
	@echo ' '

#invoke the make file in the ./plugins directory
.PHONY: ${PLUGINS}

${PLUGINS}:
	${MAKE} -C ${PLUGIN_DIR}

#invoke make for the Minibot directory
.PHONY: ${MINIBOT}

${MINIBOT}:
	${MAKE} -C ${MINIBOT_PATH} 

#pattern rule for objects in thread
${BUILD_THREADS}/%.o:${SRC_THREAD}/%.cpp
	@mkdir -p ${BUILD_THREADS}
	@echo 'Building file: $<'
	@echo 'Invoking: GCC C++ Compiler'
	g++ ${INCLUDES} -D_GLIBCXX_DEBUG -g -O0 -Wall -c -fmessage-length=0 -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -o"$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

#pattern rule for objectes in core
${BUILD_CORE}/%.o:${SRC_CORE}/%.cpp
	@mkdir -p ${BUILD_CORE}
	@echo 'Building file: $<'
	@echo 'Invoking: GCC C++ Compiler'
	g++ ${INCLUDES} -D_GLIBCXX_DEBUG -g -O0 -Wall -c -fmessage-length=0 -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -o"$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

#Obligitory clean rull
.PHONY: clean
clean:
	${RM} ${BUILD_THREADS}/*.d ${BUILD_THREADS}/*.o ${BUILD_CORE}/*.d ${BUILD_CORE}/*.o ${THREAD_LIB} ${EXECUTABLE}

.PHONY: cleanall

cleanall: clean
	${MAKE} -C ${MINIBOT_PATH} clean
	${MAKE} -C ${PLUGIN_DIR} clean

.PHONY: rebuild

rebuild: cleanall all

